<Workflow name="Qmasters GitHub workflow for QRadar" version="1.0" xmlns="http://qradar.ibm.com/UniversalCloudRESTAPI/Workflow/V2">
    <Parameters>
        <Parameter name="orgName" label="Organization Name" required="false" />
        <Parameter name="apiToken" label="API Token" required="true" secret="true" />
        <Parameter name="phrase" label="Search Phrase" required="false"/>
        <Parameter name="perPage" label="Per Page" required="false" default="30" />
        <Parameter name="include" label="Include" required="false" default="web" />
        <Parameter name="timeZone" label="Time Zone" required="false" default="UTC" />
    </Parameters>

    <Actions>
        <!-- Clear the log source status before a new workflow run starts -->
        <ClearStatus />

        <!-- Initialize the risingValue filter for the first run. -->
        <Initialize path="/bookmark" value="${time() - 3600000}" />

        <!-- Prepare the start date filter, based on the current bookmark -->
        <FormatDate pattern="yyyy-MM-dd'T'HH:mm:ss[.SSS]" time="${/bookmark}" timeZone="${/timeZone}" savePath="/startTime" />

        <!-- Set the pharse wite the last log date -->
        <Set path="/phraseQuery" value="created:${/startTime}+${/phrase}"/>

        <!-- Get Logs -->				
        <CallEndpoint url="https://api.github.com/orgs/${/orgName}/audit-log" method="GET" savePath="/get_logs">
            <BearerAuthentication token="${/apiToken}" />
            <QueryParameter name="phrase" value="${/phraseQuery}" omitIfEmpty="true"/>
            <QueryParameter name="per_page" value="${/perPage}" omitIfEmpty="true"/>
            <QueryParameter name="include" value="${/include}" omitIfEmpty="true"/>
            <QueryParameter name="order" value="desc"/>
        </CallEndpoint>

        <!-- Handle Errors -->
        <If condition="/get_logs/status_code != 200">
            <If condition="/get_logs/status_code = 403" >
                <Abort reason="This key has no satisfied permissions" />
                <Log type="ERROR" message="GitHub API error: ${/get_logs/body/errorMessages}"/>
            </If>
            <If condition="/get_logs/status_code = 401" >
                <Abort reason="Bad credentials" />
                <Log type="ERROR" message="GitHub API error: ${/get_logs/body/errorMessages}"/>
            </If>

            <If condition="/get_logs/status_code = 400" >
                <Abort reason="Bad input parameter. ${/get_logs/body/errorMessages}" />
                <Log type="ERROR" message="GitHub API error: ${/get_logs/body/errorMessages}"/>
            </If>

            <If condition="/get_logs/status_code >= 500" >
                <Abort reason="GitHub API is not available" />
                <Log type="ERROR" message="GitHub API error: ${/get_logs/body/errorMessages}"/>
            </If>

            <Abort reason="GitHub abort reason:  ${/get_logs}" />
            <Log type="ERROR" message="GitHub API error: ${/get_logs/body/errorMessages}"/>
        </If>

        <!-- Post Events, if any -->
            <If condition="count(/get_logs/body) > 0">
                <PostEvents path="/get_logs/body" source="${/orgName}" />

                <ForEach item="/log" items="/get_logs/body">
                    <Add path="/logs_time" value="${/log/created_at}" />
                </ForEach>

                <!-- Update the bookmark -->
                <Set path="/bookmark" value="${max(/logs_time) + 1}" />
            </If>

    </Actions>	
    <Tests>
        <DNSResolutionTest host="api.github.com" />
        <TCPConnectionTest host="api.github.com" />
        <SSLHandshakeTest host="api.github.com" />
        <HTTPConnectionThroughProxyTest url="api.github.com" expectedResponseStatus="404" />
    </Tests>
</Workflow>