<Workflow name="Qmasters Symantec-ICD Incidents workflow" version="1.0" xmlns="http://qradar.ibm.com/UniversalCloudRESTAPI/Workflow/V2">
    <Parameters>
        <Parameter name="identifier" label="Log Source Identifier" description="The log source identifier to post the events to." required="true" />
        <Parameter name="instance_name" label="Instance Name" description="Symantec-ICD instance name." default="api.sep.securitycloud.symantec.com" required="false" />
        <Parameter name="api_key" label="Username" description="Symantec-ICD API key." required="true" secret="true"/>
        <Parameter name="time_zone" label="Time Zone" description="The timezone to be used." default="UTC" />
        <Parameter name="events_per_fetch" label="Events Per Fetch" description="Max number of records to return per fetch. Note: a large fetch may cause timeout errors." default="100" />
        <Parameter name="initial_fetch_period" label="Initial Event Fetch Period in Days" description="Number of days in the past from which events will be initially retrieved." default="7" />
    </Parameters>
    <Actions>
        <!-- Clear the log source status before a new workflow run starts. -->
        <ClearStatus />
        <Set path="/events_count" value="0" />
        <Set path="/next" value="0" />
        <Initialize path="/bookmark" value="" />
        <Initialize path="/time_format" value="yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" />

        <If condition="empty(/bookmark)" >
            <!-- Initialize the last updated time filter for the first run. -->
            <Set path="/bookmark" value="${time() - /initial_fetch_period * 86400 * 1000}" />
            <FormatDate pattern="${/time_format}" timeZone="${/time_zone}" time="${/bookmark}" savePath="/bookmark" />
        </If>

        <!-- Preperer the end time filter. -->
        <Set path="/end_time" value="${time()}"/>
        <FormatDate pattern="${/time_format}" timeZone="${/time_zone}" time="${/end_time}" savePath="/end_time" />

        <Log type="INFO" message="[Symantec-ICD]: Authenticating, fetching bearer token..." />

        <!-- Get new token from Symantec-ICD. -->
        <CallEndpoint url="https://${/instance_name}/v1/oauth2/tokens" method="POST" savePath="/response" >
            <!-- <SSLConfiguration allowUntrustedServerCertificate="true" /> -->
            <RequestHeader name="authorization" value="${/api_key}" />
            <RequestHeader name="content-type" value="application/x-www-form-urlencoded" />
            <RequestHeader name="accept" value="application/json" />
        </CallEndpoint>

        <!-- Handle token generation error. -->
        <If condition="/response/status_code != 200">
            <Log type="ERROR" message="[Symantec-ICD]: status code ${/response/status_code}, abort to generate new token. Reason: ${/response/body}" />
            <Abort reason="${/response}" />
        </If>

        <Log type="INFO" message="[Symantec-ICD]: Bearer token received!" />
        <!-- Save the bearer token. -->
        <Set path="/bearer_token" value="${/response/body/access_token}" />

        <!-- Pagination handling: aslong as events are returned, keep fetching data. -->
        <Set path="/start_run" value="${time()}" />
        <Set path="/requestBody" value="{
            &quot;start_date&quot;: &quot;${/bookmark}&quot;,
            &quot;end_date&quot;: &quot;${/end_time}&quot;,
            &quot;next&quot;: ${/next},
            &quot;limit&quot;: ${/events_per_fetch},
            &quot;include_events&quot;:false
        }" />
        <Log type="INFO" message="[Symantec-ICD]: Running fetch for incidents, request body: ${/requestBody}" />

        <!-- Get the reports. -->
        <CallEndpoint url="https://${/instance_name}/v1/incidents" method="POST" savePath="/response" >
            <!-- <SSLConfiguration allowUntrustedServerCertificate="true" /> -->
            <RequestHeader name="authorization" value="${/bearer_token}" />
            <RequestHeader name="content-type" value="application/json" />
            <RequestHeader name="accept" value="application/json" />
            <RequestBody type="application/json" encoding="UTF-8">
                ${/requestBody}
            </RequestBody>
        </CallEndpoint>

        <If condition="/response/status_code = 200">
            <!-- Handle a succesful response. -->
            <Set path="/events" value="${/response/body/incidents}" />
            <Set path="/events_count" value="${count(/events)}" />

            <!-- If there were any events, post them and update the last updated time to the latest one. -->
            <If condition="${/events_count} > 0">
                <Log type="INFO" message="[Symantec-ICD]: Posting fetched events..." />
                <PostEvents path="/events" source="${/identifier}" />

                <!-- Update the last updated time for next run. -->
                <FormatDate pattern="${/time_format}" time="${max(/events/time)}" savePath="/bookmark" />
                <ParseDate pattern="yyyy-MM-dd'T'HH:mm:ss.SSSXXX" date="${/bookmark}" savePath="/bookmark" />
                <Set path="/bookmark" value="${/bookmark + 1}"/>
                <Log type="INFO" message="[Symantec-ICD]: Bookmark updated to: ${/bookmark}" />
                <FormatDate pattern="${/time_format}" time="${/bookmark}" savePath="/bookmark" />
                <Log type="INFO" message="[Symantec-ICD]: Done fetch period; total fetched events: ${/events_count}; total time in milliseconds is: ${time() - /start_run}" />

            </If>
            <Else>
                <Log type="INFO" message="[Symantec-ICD]: No new events were found." />
            </Else>
        </If>
        <ElseIf condition="/response/status_code = 401">

            <!-- Get new token from Symantec-ICD. -->
            <CallEndpoint url="https://${/instance_name}/v1/oauth2/tokens" method="POST" savePath="/response" >
                <!-- <SSLConfiguration allowUntrustedServerCertificate="true" /> -->
                    <RequestHeader name="authorization" value="${/api_key}" />
                    <RequestHeader name="content-type" value="application/x-www-form-urlencoded" />
                    <RequestHeader name="accept" value="application/json" />
            </CallEndpoint>

            <!-- Handle token generation error. -->
            <If condition="/response/status_code != 200">
                <Log type="ERROR" message="Symantec-ICD - status code ${/response/status_code}, abort to generate new token. Reason: ${/response/body}" />
                <Abort reason="${/response}" />
            </If>

            <Log type="INFO" message="[Symantec-ICD]: Bearer token received!" />
            <!-- Save the bearer token. -->
            <Set path="/bearer_token" value="${/response/body/access_token}" />
        </ElseIf>
        <Else>
            <Log type="ERROR" message="Symantec-ICD - status code ${/response/status_code}, abort at get incidents. Reason: ${/response/body}" />
            <Abort reason="${/response}" />
        </Else>
    </Actions>

    <Tests>
        <DNSResolutionTest host="${/instance_name}" />
        <TCPConnectionTest host="${/instance_name}" />
        <SSLHandshakeTest host="https://${/instance_name}" />
        <HTTPConnectionThroughProxyTest url="https://${/instance_name}" expectedResponseStatus="404" />
    </Tests>
</Workflow>
